{#
/**
 * -------------------------------------------------------------------------
 * JAMF plugin for GLPI
 * -------------------------------------------------------------------------
 *
 * LICENSE
 *
 * This file is part of JAMF plugin for GLPI.
 *
 * JAMF plugin for GLPI is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * JAMF plugin for GLPI is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JAMF plugin for GLPI. If not, see <http://www.gnu.org/licenses/>.
 * -------------------------------------------------------------------------
 * @copyright Copyright (C) 2024-2024 by Teclib'
 * @copyright Copyright (C) 2019-2024 by Curtis Conard
 * @license   GPLv2 https://www.gnu.org/licenses/gpl-2.0.html
 * @link      https://github.com/pluginsGLPI/jamf
 * -------------------------------------------------------------------------
 */
#}

{% import 'components/form/fields_macros.html.twig' as fields %}

<form>
    {{ include('components/pager.html.twig', {
        count: total_count,
        href: get_plugin_web_dir('jamf') ~ '/front/merge.php',
        start: _get['start']|default(0),
    }) }}
    <input type="hidden" name="_glpi_csrf_token" value="{{ csrf_token() }}"/>
    <div class="table-responsive text-center">
        <table id="merge_table" class="table table-striped">
            <thead>
                <tr>
                    <th>{{ _x('field', 'Jamf ID', 'jamf') }}</th>
                    <th>{{ _x('field', 'Name', 'jamf') }}</th>
                    <th>{{ _x('field', 'GLPI Asset Type', 'jamf') }}</th>
                    <th>{{ _x('field', 'Jamf Type', 'jamf') }}</th>
                    <th>{{ _x('field', 'UDID', 'jamf') }}</th>
                    <th>{{ _x('field', 'Discovery Date', 'jamf') }}</th>
                    <th>{{ _x('field', 'GLPI Asset', 'jamf') }}</th>
                </tr>
            </thead>
            <tbody>
                {% for data in pending %}
                    <tr>
                        <td>{{ data.jamf_items_id }}</td>
                        <td>
                            <a href="{{ call('PluginJamf' ~ data.jamf_type ~ '::getJamfDeviceURL', [data.jamf_items_id]) }}">{{ data.name }}</a>
                        </td>
                        <td>
                            {% if supported_glpi_types[data.jamf_type]|length > 0 %}
                                {{ fields.dropdownArrayField('glpi_type', data.type, supported_glpi_types[data.jamf_type], null, {
                                    no_label: true,
                                    full_width: true,
                                }) }}
                            {% else %}
                                {{ data.type|itemtype_name }}
                            {% endif %}
                        </td>
                        <td>{{ data.jamf_type }}</td>
                        <td class="{{ data.udid is empty ? 'font-italic' : '' }}">
                            {{ data.udid is not empty ? data.udid : _x('message', 'Not collected during discovery', 'jamf') }}
                        </td>
                        <td>{{ data.date_discover|formatted_datetime }}</td>
                        <td>
                            {% for glpi_type in supported_glpi_types[data.jamf_type] %}
                                <span class="{{ glpi_type != data.type ? 'd-none' : '' }}" data-itemtype="{{ glpi_type }}">
                                    {{ fields.dropdownField(glpi_type, 'items_id', data.guessed_item[glpi_type], null, {
                                        no_label: true,
                                        full_width: true,
                                        used: linked[glpi_type]|default([])|column('items_id'),
                                    }) }}
                                </span>
                            {% endfor %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% set limitdropdown = include('components/dropdown/limit.html.twig', {
        href: get_plugin_web_dir('jamf') ~ '/front/merge.php',
    }) %}
    <div class="ms-auto d-inline-flex align-items-center d-none d-md-block my-2">
        {{ __('Show %s entries')|format(limitdropdown)|raw }}
    </div>
    <br>
    <div class="text-center">
        <button name="merge" type="button" class="btn btn-primary" onclick="mergeDevices();">{{ _x('action', 'Merge', 'jamf') }}</button>
        <script>
            function mergeDevices() {
                const post_data = {};
                const table = $("#merge_table")[0];
                const row_count = table.rows.length;
                for (let i = 1; i < row_count; i++) {
                    const row = table.rows[i];
                    const jamf_id = row.cells[0].innerText;
                    const itemtype = $(row.cells[2]).find('select')[0].value;
                    const jamf_type = row.cells[3].innerText;
                    const glpi_sel = $(row.cells[6]).find('span[data-itemtype]:not(.d-none) select')[0];
                    const glpi_id = glpi_sel.value;
                    if (glpi_id && glpi_id > 0) {
                        post_data[glpi_id] = {'itemtype': itemtype, 'jamf_id': jamf_id, 'jamf_type': jamf_type};
                    }
                }
                $.ajax({
                    type: "POST",
                    url: "{{ get_plugin_web_dir('jamf') }}/ajax/merge.php",
                    data: {action: "merge", item_ids: post_data},
                    contentType: 'application/json',
                    beforeSend: () => {
                        $('button[name="merge"]').prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> {{ _x('action', 'Merging', 'jamf') }}');
                    },
                    complete: () => {
                        location.reload();
                    }
                });
            }
            $('select[name="glpi_type"]').on('change', (e) => {
                const selection = $(e.target).val();
                $(e.target).closest('tr').find('span[data-itemtype]').addClass('d-none');
                $(e.target).closest('tr').find('span[data-itemtype="' + selection + '"]').removeClass('d-none');
            });
        </script>
    </div>
</form>
